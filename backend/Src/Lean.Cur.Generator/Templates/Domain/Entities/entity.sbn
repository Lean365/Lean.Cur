/**
 * @description {{ entity_name }}实体类
 * @author CodeGenerator
 * @date {{ date.now | date.to_string "%Y-%m-%d" }}
 * @version 1.0.0
 * @copyright © 2023 Lean. All rights reserved
 */

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using SqlSugar;

namespace Lean.Cur.Domain.Entities;

/// <summary>
/// {{ entity_name }}实体类
/// </summary>
/// <remarks>
/// 该实体类映射到数据库表 {{ table_name }}，用于存储{{ entity_name }}相关数据
/// 
/// 数据库映射说明：
/// 1. 表名：{{ table_name }}
/// 2. 主键：Id (自增长)
/// 3. 基础字段：继承自LeanBaseEntity，包含创建时间、创建人、更新时间、更新人等
/// 
/// 字段说明：
/// {{~ for property in properties ~}}
/// - {{ property.name }}: {{ property.comment }}
///   * 数据库字段：{{ property.column_name }}
///   * 数据类型：{{ property.type }}
///   * 是否可空：{{ if property.is_nullable }}是{{ else }}否{{ end }}
///   {{~ if property.has_default_value ~}}
///   * 默认值：{{ property.default_value }}
///   {{~ end ~}}
/// {{~ end ~}}
/// </remarks>
[SugarTable("{{ table_name }}", TableDescription = "{{ entity_name }}表")]
public class Lean{{ entity_name }} : LeanBaseEntity
{
    {{~ for property in properties ~}}
    /// <summary>
    /// {{ property.comment }}
    /// </summary>
    /// <remarks>
    /// 数据库字段信息：
    /// - 字段名：{{ property.column_name }}
    /// - 数据类型：{{ property.type }}
    /// - 是否可空：{{ if property.is_nullable }}是{{ else }}否{{ end }}
    /// {{~ if property.has_default_value ~}}
    /// - 默认值：{{ property.default_value }}
    /// {{~ end ~}}
    /// {{~ if property.is_key ~}}
    /// - 主键：是
    /// {{~ end ~}}
    /// {{~ if property.is_foreign_key ~}}
    /// - 外键：是，关联到{{ property.reference_table }}.{{ property.reference_column }}
    /// {{~ end ~}}
    /// </remarks>
    [Description("{{ property.comment }}")]
    {{~ if !property.is_nullable ~}}
    [Required(ErrorMessage = "{{ property.comment }}不能为空")]
    {{~ end ~}}
    [SugarColumn(
        ColumnName = "{{ property.column_name }}",
        {{~ if property.is_nullable ~}}
        IsNullable = true,
        {{~ end ~}}
        {{~ if property.is_key ~}}
        IsPrimaryKey = true,
        {{~ end ~}}
        {{~ if property.is_foreign_key ~}}
        IsIgnore = false,
        {{~ end ~}}
        ColumnDescription = "{{ property.comment }}"
    )]
    public {{ property.type }} {{ property.name }} { get; set; }{{ if property.has_default_value }} = {{ property.default_value }};{{ end }}

    {{~ end ~}}
} 